"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/typed.js";
exports.ids = ["vendor-chunks/typed.js"];
exports.modules = {

/***/ "(ssr)/./node_modules/typed.js/dist/typed.module.js":
/*!****************************************************!*\
  !*** ./node_modules/typed.js/dist/typed.module.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ i)\n/* harmony export */ });\nfunction t() {\n    return t = Object.assign ? Object.assign.bind() : function(t) {\n        for(var s = 1; s < arguments.length; s++){\n            var e = arguments[s];\n            for(var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);\n        }\n        return t;\n    }, t.apply(this, arguments);\n}\nvar s = {\n    strings: [\n        \"These are the default values...\",\n        \"You know what you should do?\",\n        \"Use your own!\",\n        \"Have a great day!\"\n    ],\n    stringsElement: null,\n    typeSpeed: 0,\n    startDelay: 0,\n    backSpeed: 0,\n    smartBackspace: !0,\n    shuffle: !1,\n    backDelay: 700,\n    fadeOut: !1,\n    fadeOutClass: \"typed-fade-out\",\n    fadeOutDelay: 500,\n    loop: !1,\n    loopCount: Infinity,\n    showCursor: !0,\n    cursorChar: \"|\",\n    autoInsertCss: !0,\n    attr: null,\n    bindInputFocusEvents: !1,\n    contentType: \"html\",\n    onBegin: function(t) {},\n    onComplete: function(t) {},\n    preStringTyped: function(t, s) {},\n    onStringTyped: function(t, s) {},\n    onLastStringBackspaced: function(t) {},\n    onTypingPaused: function(t, s) {},\n    onTypingResumed: function(t, s) {},\n    onReset: function(t) {},\n    onStop: function(t, s) {},\n    onStart: function(t, s) {},\n    onDestroy: function(t) {}\n}, e = new /*#__PURE__*/ (function() {\n    function e() {}\n    var n = e.prototype;\n    return n.load = function(e, n, i) {\n        if (e.el = \"string\" == typeof i ? document.querySelector(i) : i, e.options = t({}, s, n), e.isInput = \"input\" === e.el.tagName.toLowerCase(), e.attr = e.options.attr, e.bindInputFocusEvents = e.options.bindInputFocusEvents, e.showCursor = !e.isInput && e.options.showCursor, e.cursorChar = e.options.cursorChar, e.cursorBlinking = !0, e.elContent = e.attr ? e.el.getAttribute(e.attr) : e.el.textContent, e.contentType = e.options.contentType, e.typeSpeed = e.options.typeSpeed, e.startDelay = e.options.startDelay, e.backSpeed = e.options.backSpeed, e.smartBackspace = e.options.smartBackspace, e.backDelay = e.options.backDelay, e.fadeOut = e.options.fadeOut, e.fadeOutClass = e.options.fadeOutClass, e.fadeOutDelay = e.options.fadeOutDelay, e.isPaused = !1, e.strings = e.options.strings.map(function(t) {\n            return t.trim();\n        }), e.stringsElement = \"string\" == typeof e.options.stringsElement ? document.querySelector(e.options.stringsElement) : e.options.stringsElement, e.stringsElement) {\n            e.strings = [], e.stringsElement.style.cssText = \"clip: rect(0 0 0 0);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px;\";\n            var r = Array.prototype.slice.apply(e.stringsElement.children), o = r.length;\n            if (o) for(var a = 0; a < o; a += 1)e.strings.push(r[a].innerHTML.trim());\n        }\n        for(var u in e.strPos = 0, e.currentElContent = this.getCurrentElContent(e), e.currentElContent && e.currentElContent.length > 0 && (e.strPos = e.currentElContent.length - 1, e.strings.unshift(e.currentElContent)), e.sequence = [], e.strings)e.sequence[u] = u;\n        e.arrayPos = 0, e.stopNum = 0, e.loop = e.options.loop, e.loopCount = e.options.loopCount, e.curLoop = 0, e.shuffle = e.options.shuffle, e.pause = {\n            status: !1,\n            typewrite: !0,\n            curString: \"\",\n            curStrPos: 0\n        }, e.typingComplete = !1, e.autoInsertCss = e.options.autoInsertCss, e.autoInsertCss && (this.appendCursorAnimationCss(e), this.appendFadeOutAnimationCss(e));\n    }, n.getCurrentElContent = function(t) {\n        return t.attr ? t.el.getAttribute(t.attr) : t.isInput ? t.el.value : \"html\" === t.contentType ? t.el.innerHTML : t.el.textContent;\n    }, n.appendCursorAnimationCss = function(t) {\n        var s = \"data-typed-js-cursor-css\";\n        if (t.showCursor && !document.querySelector(\"[\" + s + \"]\")) {\n            var e = document.createElement(\"style\");\n            e.setAttribute(s, \"true\"), e.innerHTML = \"\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      \", document.body.appendChild(e);\n        }\n    }, n.appendFadeOutAnimationCss = function(t) {\n        var s = \"data-typed-fadeout-js-css\";\n        if (t.fadeOut && !document.querySelector(\"[\" + s + \"]\")) {\n            var e = document.createElement(\"style\");\n            e.setAttribute(s, \"true\"), e.innerHTML = \"\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      \", document.body.appendChild(e);\n        }\n    }, e;\n}()), n = new /*#__PURE__*/ (function() {\n    function t() {}\n    var s = t.prototype;\n    return s.typeHtmlChars = function(t, s, e) {\n        if (\"html\" !== e.contentType) return s;\n        var n = t.substring(s).charAt(0);\n        if (\"<\" === n || \"&\" === n) {\n            var i;\n            for(i = \"<\" === n ? \">\" : \";\"; t.substring(s + 1).charAt(0) !== i && !(1 + ++s > t.length););\n            s++;\n        }\n        return s;\n    }, s.backSpaceHtmlChars = function(t, s, e) {\n        if (\"html\" !== e.contentType) return s;\n        var n = t.substring(s).charAt(0);\n        if (\">\" === n || \";\" === n) {\n            var i;\n            for(i = \">\" === n ? \"<\" : \"&\"; t.substring(s - 1).charAt(0) !== i && !(--s < 0););\n            s--;\n        }\n        return s;\n    }, t;\n}()), i = /*#__PURE__*/ function() {\n    function t(t, s) {\n        e.load(this, s, t), this.begin();\n    }\n    var s = t.prototype;\n    return s.toggle = function() {\n        this.pause.status ? this.start() : this.stop();\n    }, s.stop = function() {\n        this.typingComplete || this.pause.status || (this.toggleBlinking(!0), this.pause.status = !0, this.options.onStop(this.arrayPos, this));\n    }, s.start = function() {\n        this.typingComplete || this.pause.status && (this.pause.status = !1, this.pause.typewrite ? this.typewrite(this.pause.curString, this.pause.curStrPos) : this.backspace(this.pause.curString, this.pause.curStrPos), this.options.onStart(this.arrayPos, this));\n    }, s.destroy = function() {\n        this.reset(!1), this.options.onDestroy(this);\n    }, s.reset = function(t) {\n        void 0 === t && (t = !0), clearInterval(this.timeout), this.replaceText(\"\"), this.cursor && this.cursor.parentNode && (this.cursor.parentNode.removeChild(this.cursor), this.cursor = null), this.strPos = 0, this.arrayPos = 0, this.curLoop = 0, t && (this.insertCursor(), this.options.onReset(this), this.begin());\n    }, s.begin = function() {\n        var t = this;\n        this.options.onBegin(this), this.typingComplete = !1, this.shuffleStringsIfNeeded(this), this.insertCursor(), this.bindInputFocusEvents && this.bindFocusEvents(), this.timeout = setTimeout(function() {\n            0 === t.strPos ? t.typewrite(t.strings[t.sequence[t.arrayPos]], t.strPos) : t.backspace(t.strings[t.sequence[t.arrayPos]], t.strPos);\n        }, this.startDelay);\n    }, s.typewrite = function(t, s) {\n        var e = this;\n        this.fadeOut && this.el.classList.contains(this.fadeOutClass) && (this.el.classList.remove(this.fadeOutClass), this.cursor && this.cursor.classList.remove(this.fadeOutClass));\n        var i = this.humanizer(this.typeSpeed), r = 1;\n        !0 !== this.pause.status ? this.timeout = setTimeout(function() {\n            s = n.typeHtmlChars(t, s, e);\n            var i = 0, o = t.substring(s);\n            if (\"^\" === o.charAt(0) && /^\\^\\d+/.test(o)) {\n                var a = 1;\n                a += (o = /\\d+/.exec(o)[0]).length, i = parseInt(o), e.temporaryPause = !0, e.options.onTypingPaused(e.arrayPos, e), t = t.substring(0, s) + t.substring(s + a), e.toggleBlinking(!0);\n            }\n            if (\"`\" === o.charAt(0)) {\n                for(; \"`\" !== t.substring(s + r).charAt(0) && (r++, !(s + r > t.length)););\n                var u = t.substring(0, s), p = t.substring(u.length + 1, s + r), c = t.substring(s + r + 1);\n                t = u + p + c, r--;\n            }\n            e.timeout = setTimeout(function() {\n                e.toggleBlinking(!1), s >= t.length ? e.doneTyping(t, s) : e.keepTyping(t, s, r), e.temporaryPause && (e.temporaryPause = !1, e.options.onTypingResumed(e.arrayPos, e));\n            }, i);\n        }, i) : this.setPauseStatus(t, s, !0);\n    }, s.keepTyping = function(t, s, e) {\n        0 === s && (this.toggleBlinking(!1), this.options.preStringTyped(this.arrayPos, this));\n        var n = t.substring(0, s += e);\n        this.replaceText(n), this.typewrite(t, s);\n    }, s.doneTyping = function(t, s) {\n        var e = this;\n        this.options.onStringTyped(this.arrayPos, this), this.toggleBlinking(!0), this.arrayPos === this.strings.length - 1 && (this.complete(), !1 === this.loop || this.curLoop === this.loopCount) || (this.timeout = setTimeout(function() {\n            e.backspace(t, s);\n        }, this.backDelay));\n    }, s.backspace = function(t, s) {\n        var e = this;\n        if (!0 !== this.pause.status) {\n            if (this.fadeOut) return this.initFadeOut();\n            this.toggleBlinking(!1);\n            var i = this.humanizer(this.backSpeed);\n            this.timeout = setTimeout(function() {\n                s = n.backSpaceHtmlChars(t, s, e);\n                var i = t.substring(0, s);\n                if (e.replaceText(i), e.smartBackspace) {\n                    var r = e.strings[e.arrayPos + 1];\n                    e.stopNum = r && i === r.substring(0, s) ? s : 0;\n                }\n                s > e.stopNum ? (s--, e.backspace(t, s)) : s <= e.stopNum && (e.arrayPos++, e.arrayPos === e.strings.length ? (e.arrayPos = 0, e.options.onLastStringBackspaced(), e.shuffleStringsIfNeeded(), e.begin()) : e.typewrite(e.strings[e.sequence[e.arrayPos]], s));\n            }, i);\n        } else this.setPauseStatus(t, s, !1);\n    }, s.complete = function() {\n        this.options.onComplete(this), this.loop ? this.curLoop++ : this.typingComplete = !0;\n    }, s.setPauseStatus = function(t, s, e) {\n        this.pause.typewrite = e, this.pause.curString = t, this.pause.curStrPos = s;\n    }, s.toggleBlinking = function(t) {\n        this.cursor && (this.pause.status || this.cursorBlinking !== t && (this.cursorBlinking = t, t ? this.cursor.classList.add(\"typed-cursor--blink\") : this.cursor.classList.remove(\"typed-cursor--blink\")));\n    }, s.humanizer = function(t) {\n        return Math.round(Math.random() * t / 2) + t;\n    }, s.shuffleStringsIfNeeded = function() {\n        this.shuffle && (this.sequence = this.sequence.sort(function() {\n            return Math.random() - .5;\n        }));\n    }, s.initFadeOut = function() {\n        var t = this;\n        return this.el.className += \" \" + this.fadeOutClass, this.cursor && (this.cursor.className += \" \" + this.fadeOutClass), setTimeout(function() {\n            t.arrayPos++, t.replaceText(\"\"), t.strings.length > t.arrayPos ? t.typewrite(t.strings[t.sequence[t.arrayPos]], 0) : (t.typewrite(t.strings[0], 0), t.arrayPos = 0);\n        }, this.fadeOutDelay);\n    }, s.replaceText = function(t) {\n        this.attr ? this.el.setAttribute(this.attr, t) : this.isInput ? this.el.value = t : \"html\" === this.contentType ? this.el.innerHTML = t : this.el.textContent = t;\n    }, s.bindFocusEvents = function() {\n        var t = this;\n        this.isInput && (this.el.addEventListener(\"focus\", function(s) {\n            t.stop();\n        }), this.el.addEventListener(\"blur\", function(s) {\n            t.el.value && 0 !== t.el.value.length || t.start();\n        }));\n    }, s.insertCursor = function() {\n        this.showCursor && (this.cursor || (this.cursor = document.createElement(\"span\"), this.cursor.className = \"typed-cursor\", this.cursor.setAttribute(\"aria-hidden\", !0), this.cursor.innerHTML = this.cursorChar, this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling)));\n    }, t;\n}();\n //# sourceMappingURL=typed.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/typed.js/dist/typed.module.js\n");

/***/ })

};
;